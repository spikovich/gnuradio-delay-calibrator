options:
  parameters:
    author: ''
    catch_exceptions: 'True'
    category: '[GRC Hier Blocks]'
    cmake_opt: ''
    comment: ''
    copyright: ''
    description: ''
    gen_cmake: 'On'
    gen_linking: dynamic
    generate_options: qt_gui
    hier_block_src_path: '.:'
    id: sa
    max_nouts: '0'
    output_language: python
    placement: (0,0)
    qt_qss_theme: ''
    realtime_scheduling: ''
    run: 'True'
    run_command: '{python} -u {filename}'
    run_options: prompt
    sizing_mode: fixed
    thread_safe_setters: ''
    title: Not titled yet
    window_size: (1000,1000)
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [8, 8]
    rotation: 0
    state: enabled

blocks:
- name: compensation_delay
  id: variable
  parameters:
    comment: ''
    value: '0'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [48, 304.0]
    rotation: 0
    state: enabled
- name: reset_calibration_button
  id: variable_qtgui_push_button
  parameters:
    comment: ''
    gui_hint: ''
    label: Reset Calibration
    pressed: '1'
    released: '0'
    type: bool
    value: 'False'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [200, 328.0]
    rotation: 0
    state: enabled
- name: samp_rate
  id: variable
  parameters:
    comment: ''
    value: '32000'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [184, 12]
    rotation: 0
    state: enabled
- name: start_calibration_button
  id: variable_qtgui_push_button
  parameters:
    comment: ''
    gui_hint: ''
    label: Start Calibration
    pressed: '1'
    released: '0'
    type: bool
    value: 'False'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [480, 40.0]
    rotation: 0
    state: enabled
- name: analog_random_source_x_0
  id: analog_random_source_x
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    max: '256'
    maxoutbuf: '0'
    min: '0'
    minoutbuf: '0'
    num_samps: '1000'
    repeat: 'True'
    type: byte
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [32, 160.0]
    rotation: 0
    state: enabled
- name: blocks_char_to_float_0
  id: blocks_char_to_float
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    scale: '1'
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [344, 144.0]
    rotation: 0
    state: enabled
- name: blocks_char_to_float_1
  id: blocks_char_to_float
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    scale: '1'
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [352, 224.0]
    rotation: 0
    state: enabled
- name: blocks_delay_0
  id: blocks_delay
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    delay: '5'
    maxoutbuf: '0'
    minoutbuf: '0'
    num_ports: '1'
    showports: 'True'
    type: byte
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [224, 144.0]
    rotation: 0
    state: enabled
- name: blocks_delay_1
  id: blocks_delay
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    delay: compensation_delay
    maxoutbuf: '0'
    minoutbuf: '0'
    num_ports: '1'
    showports: 'True'
    type: byte
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [208, 224.0]
    rotation: 0
    state: enabled
- name: blocks_message_debug_0
  id: blocks_message_debug
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    en_uvec: 'True'
    log_level: info
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [680, 416.0]
    rotation: 0
    state: enabled
- name: blocks_sub_xx_0
  id: blocks_sub_xx
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    num_inputs: '2'
    type: float
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [496, 168.0]
    rotation: 0
    state: disabled
- name: blocks_throttle2_0
  id: blocks_throttle2
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    ignoretag: 'True'
    limit: auto
    maximum: '0.1'
    maxoutbuf: '0'
    minoutbuf: '0'
    samples_per_second: samp_rate
    type: float
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [672, 328.0]
    rotation: 0
    state: enabled
- name: epy_block_0
  id: epy_block
  parameters:
    _source_code: "import numpy as np\nfrom gnuradio import gr\nimport pmt \n\nclass\
      \ blk(gr.sync_block):\n    \"\"\"\n    Embedded Python Block to detect delay\
      \ between two signals using cross-correlation\n    and publish the result as\
      \ a PMT message.\n    \"\"\"\n\n    def __init__(self, buffer_size=1024):\n\
      \        \"\"\"arguments to this function show up as parameters in GRC\"\"\"\
      \n        gr.sync_block.__init__(\n            self,\n            name='Delay\
      \ Correaltion EPB',\n            in_sig=[np.float32, np.float32],\n        \
      \    out_sig=[np.float32]\n        )\n        self.buffer_size = int(buffer_size)\n\
      \        self.message_port_register_out(pmt.intern('delay_lag'))\n\n       \
      \ self.buf0 = np.zeros(self.buffer_size, dtype=np.float32)\n        self.buf1\
      \ = np.zeros(self.buffer_size, dtype=np.float32)\n        self.ptr = 0\n   \
      \     self.correlation_done = False\n        self.calibration_active = False\n\
      \n        self.tb = None\n\n    def start_calibration(self):\n        \"\"\"\
      Called to start the calibration process.\"\"\"\n        print(\"EPB: Start Calibration\
      \ Requested\")\n        self.ptr = 0\n        self.correlation_done = False\n\
      \        self.calibration_active = True\n\n    def reset_calibration(self):\n\
      \        \"\"\"Called to reset the calibration.\"\"\"\n        print(\"EPB:\
      \ Reset Calibration Requested\")\n        self.calibration_active = False\n\
      \        self.correlation_done = True\n\n    def work(self, input_items, output_items):\n\
      \        data0 = input_items[0]\n        data1 = input_items[1]\n        num_samples_to_process\
      \ = len(data0)\n\n        if self.calibration_active and not self.correlation_done:\n\
      \            samples_to_copy = min(num_samples_to_process, self.buffer_size\
      \ - self.ptr)\n\n            if samples_to_copy > 0:\n                self.buf0[self.ptr\
      \ : self.ptr + samples_to_copy] = data0[:samples_to_copy]\n                self.buf1[self.ptr\
      \ : self.ptr + samples_to_copy] = data1[:samples_to_copy]\n                self.ptr\
      \ += samples_to_copy\n\n            if self.ptr >= self.buffer_size:\n     \
      \           print(f\"EPB: Buffer full ({self.ptr} samples). Performing correlation...\"\
      )\n                x0 = self.buf0 - np.mean(self.buf0)\n                x1 =\
      \ self.buf1 - np.mean(self.buf1)\n                corr = np.correlate(x0, x1,\
      \ mode='full')\n                lag = int(np.argmax(corr) - (self.buffer_size\
      \ - 1))\n                print(f\"EPB: Correlation complete. Calculated Lag\
      \ = {lag}\")\n                self.message_port_pub(pmt.intern('delay_lag'),\
      \ pmt.to_pmt(lag))\n                self.correlation_done = True\n         \
      \       self.calibration_active = False\n                print(\"EPB: Lag message\
      \ published. Calibration cycle finished.\")\n\n        output_items[0][:num_samples_to_process]\
      \ = 0.0\n\n        return num_samples_to_process"
    affinity: ''
    alias: ''
    buffer_size: '1024'
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
  states:
    _io_cache: ('Delay Correaltion EPB', 'blk', [('buffer_size', '1024')], [('0',
      'float', 1), ('1', 'float', 1)], [('0', 'float', 1), ('delay_lag', 'message',
      1)], '\n    Embedded Python Block to detect delay between two signals using
      cross-correlation\n    and publish the result as a PMT message.\n    ', ['buffer_size'])
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [432, 344.0]
    rotation: 0
    state: enabled
- name: qtgui_time_sink_x_0
  id: qtgui_time_sink_x
  parameters:
    affinity: ''
    alias: ''
    alpha1: '1.0'
    alpha10: '1.0'
    alpha2: '1.0'
    alpha3: '1.0'
    alpha4: '1.0'
    alpha5: '1.0'
    alpha6: '1.0'
    alpha7: '1.0'
    alpha8: '1.0'
    alpha9: '1.0'
    autoscale: 'True'
    axislabels: 'True'
    color1: red
    color10: dark blue
    color2: red
    color3: green
    color4: black
    color5: cyan
    color6: magenta
    color7: yellow
    color8: dark red
    color9: dark green
    comment: ''
    ctrlpanel: 'False'
    entags: 'True'
    grid: 'False'
    gui_hint: ''
    label1: Signal 1
    label10: Signal 10
    label2: Signal 2
    label3: Signal 3
    label4: Signal 4
    label5: Signal 5
    label6: Signal 6
    label7: Signal 7
    label8: Signal 8
    label9: Signal 9
    legend: 'True'
    marker1: '-1'
    marker10: '-1'
    marker2: '-1'
    marker3: '-1'
    marker4: '-1'
    marker5: '-1'
    marker6: '-1'
    marker7: '-1'
    marker8: '-1'
    marker9: '-1'
    name: '""'
    nconnections: '1'
    size: '200'
    srate: samp_rate
    stemplot: 'False'
    style1: '1'
    style10: '1'
    style2: '1'
    style3: '1'
    style4: '1'
    style5: '1'
    style6: '1'
    style7: '1'
    style8: '1'
    style9: '1'
    tr_chan: '0'
    tr_delay: '0'
    tr_level: '0.0'
    tr_mode: qtgui.TRIG_MODE_FREE
    tr_slope: qtgui.TRIG_SLOPE_POS
    tr_tag: '""'
    type: float
    update_time: '0.10'
    width1: '1'
    width10: '1'
    width2: '1'
    width3: '1'
    width4: '1'
    width5: '1'
    width6: '1'
    width7: '1'
    width8: '1'
    width9: '1'
    ylabel: Amplitude
    ymax: '1'
    ymin: '-1'
    yunit: '""'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [656, 168.0]
    rotation: 0
    state: enabled

connections:
- [analog_random_source_x_0, '0', blocks_delay_0, '0']
- [analog_random_source_x_0, '0', blocks_delay_1, '0']
- [blocks_char_to_float_0, '0', epy_block_0, '0']
- [blocks_char_to_float_1, '0', epy_block_0, '1']
- [blocks_delay_0, '0', blocks_char_to_float_0, '0']
- [blocks_delay_1, '0', blocks_char_to_float_1, '0']
- [blocks_throttle2_0, '0', qtgui_time_sink_x_0, '0']
- [epy_block_0, '0', blocks_throttle2_0, '0']
- [epy_block_0, delay_lag, blocks_message_debug_0, print]

metadata:
  file_format: 1
  grc_version: 3.10.9.2
